{
	"info": {
		"_postman_id": "952f61b6-78b3-41e1-aebe-87b745d93c03",
		"name": "API_Testing_Student",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32226695"
	},
	"item": [
		{
			"name": "Create Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"ID\", jsonData.id)\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Saad\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Sajib\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"12-12-23\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that  id is '10063819'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql('10063819');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Hasibul'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.first_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Hasibul'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.first_name).to.eql(\"Islam\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Islam'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.middle_name).to.eql(\"Islam\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Islam'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.middle_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Santo'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.last_name).to.eql(\"Santo\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Santo'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.last_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '14-05-2000'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.date_of_birth).to.eql(\"14-05-2000\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '14-05-2000'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.date_of_birth).to.eql(\"14-05-2024\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Pragma is present\", function () {\r",
							"    pm.response.to.have.header(\"Pragma\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Expires is present\", function () {\r",
							"    pm.response.to.have.header(\"Expires\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Location is present\", function () {\r",
							"    pm.response.to.have.header(\"Location\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-AspNet-Version is present\", function () {\r",
							"    pm.response.to.have.header(\"X-AspNet-Version\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Length is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 50ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"first_name\": \"Hasibul\",\r\n  \"middle_name\": \"Islam\",\r\n  \"last_name\": \"Santo\",\r\n  \"date_of_birth\": \"14-05-2000\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}/api/studentsDetails",
					"host": [
						"{{Base Url}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that Body matches string 'status'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'status'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1245\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'data'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'data'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"sdata\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Saad\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Sajib\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"12-12-23\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql('true');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Hasibul'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Hasibul'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Islam\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Islam'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(\"Islam\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Islam'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Santo'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Santo\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Santo'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Hasibul\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '14-05-2000'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql(\"14-05-2000\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '14-05-2000'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql(\"14-05-2024\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Pragma is present\", function () {\r",
							"    pm.response.to.have.header(\"Pragma\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Expires is present\", function () {\r",
							"    pm.response.to.have.header(\"Expires\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-AspNet-Version is present\", function () {\r",
							"    pm.response.to.have.header(\"X-AspNet-Version\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Length is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"ok\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"id\": 526716,\r\n        \"first_name\": \"sample \",\r\n        \"middle_name\": \"sample \",\r\n        \"last_name\": \"sample \",\r\n        \"date_of_birth\": \"sample \"\r\n    }\r\n\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}/api/studentsDetails/{{ID}}",
					"host": [
						"{{Base Url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that Body matches string 'status' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'status' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'msg' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"msg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'msg' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql('true');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that msg is 'update  data success'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql('update  data success');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that msg is 'update  data success'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(true);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Verify that Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Pragma is present\", function () {\r",
							"    pm.response.to.have.header(\"Pragma\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Expires is present\", function () {\r",
							"    pm.response.to.have.header(\"Expires\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-AspNet-Version is present\", function () {\r",
							"    pm.response.to.have.header(\"X-AspNet-Version\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Length is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"ok\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":{{ID}},\r\n  \"first_name\": \"Sahol \",\r\n  \"middle_name\": \"Hossain \",\r\n  \"last_name\": \"Saad \",\r\n  \"date_of_birth\": \"05-05-2014 \"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}/api/studentsDetails/{{ID}}",
					"host": [
						"{{Base Url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that Body matches string 'status'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'status'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1245\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'data'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'data'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"sdata\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'id' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'first_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dhaka\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'middle_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Santo\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'last_name' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Sajib\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Body matches string 'date_of_birth' \", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"12-12-23\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql('true');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that status is 'true' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Sahol'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Sahol \");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that first_name is 'Sahol'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Sahol\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Hossain'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(\"Hossain \");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that middle_name is 'Hossain'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(\"Hossain\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Saad'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Saad \");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that last_name is 'Saad'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Saad\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '05-05-2014' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql('05-05-2014 ');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that date_of_birth is '05-05-2014' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql('05-05-2014');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Cache-Control is present\", function () {\r",
							"    pm.response.to.have.header(\"Cache-Control\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Pragma is present\", function () {\r",
							"    pm.response.to.have.header(\"Pragma\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Expires is present\", function () {\r",
							"    pm.response.to.have.header(\"Expires\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Server is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-AspNet-Version is present\", function () {\r",
							"    pm.response.to.have.header(\"X-AspNet-Version\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Content-Length is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that X-Powered-By-Plesk is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By-Plesk\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"ok\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}/api/studentsDetails/{{ID}}",
					"host": [
						"{{Base Url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}